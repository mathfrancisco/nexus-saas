{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SocialMediaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'api/social-media'; // Replace with your actual API endpoint\n  }\n\n  schedulePost(post) {\n    return this.http.post(`${this.apiUrl}/posts/schedule`, post);\n  }\n  getScheduledPosts(startDate, endDate) {\n    return this.http.get(`${this.apiUrl}/scheduled`, {\n      params: {\n        start: startDate.toISOString(),\n        end: endDate.toISOString()\n      }\n    });\n  }\n  static {\n    this.ɵfac = function SocialMediaService_Factory(t) {\n      return new (t || SocialMediaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SocialMediaService,\n      factory: SocialMediaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["SocialMediaService","constructor","http","apiUrl","schedulePost","post","getScheduledPosts","startDate","endDate","get","params","start","toISOString","end","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MATHEUS\\Documents\\GitHub\\nexus-saas\\nexus-front\\src\\app\\core\\services\\social-media.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Post } from '../../models/post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialMediaService {\n  private apiUrl = 'api/social-media'; // Replace with your actual API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  schedulePost(post: Post): Observable<Post> {\n    return this.http.post<Post>(`${this.apiUrl}/posts/schedule`, post);\n  }\n\n  getScheduledPosts(startDate: Date, endDate: Date): Observable<Post[]> {\n    return this.http.get<Post[]>(`${(this.apiUrl)}/scheduled`, {\n      params: {\n        start: startDate.toISOString(),\n        end: endDate.toISOString()\n      }\n    });\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC;EAEE;;EAEvCC,YAAYA,CAACC,IAAU;IACrB,OAAO,IAAI,CAACH,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACF,MAAM,iBAAiB,EAAEE,IAAI,CAAC;EACpE;EAEAC,iBAAiBA,CAACC,SAAe,EAAEC,OAAa;IAC9C,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,GAAI,IAAI,CAACN,MAAO,YAAY,EAAE;MACzDO,MAAM,EAAE;QACNC,KAAK,EAAEJ,SAAS,CAACK,WAAW,EAAE;QAC9BC,GAAG,EAAEL,OAAO,CAACI,WAAW;;KAE3B,CAAC;EACJ;;;uBAhBWZ,kBAAkB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBjB,kBAAkB;MAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}